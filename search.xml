<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>各种加速</title>
      <link href="/2018/08/22/%E5%90%84%E7%A7%8D%E5%8A%A0%E9%80%9F/"/>
      <url>/2018/08/22/%E5%90%84%E7%A7%8D%E5%8A%A0%E9%80%9F/</url>
      <content type="html"><![CDATA[<p>代码中加速非常重要 <del>废话</del><br>然而我入坑了才意识到</p><h2 id="首先是应付卡常的加速"><a href="#首先是应付卡常的加速" class="headerlink" title="首先是应付卡常的加速"></a>首先是应付卡常的加速</h2><h3 id="jzyzOJ-1295"><a href="#jzyzOJ-1295" class="headerlink" title="jzyzOJ 1295"></a>jzyzOJ 1295</h3><p>通过这道题我终于体会到了输入输出优化的重要性。。。<br>其实主要就是快读<br><a id="more"></a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cstring&gt;</span></span><br><span class="line"><span class="comment">#include&lt;algorithm&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cstdio&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cmath&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int a[3000][3000]=&#123;&#125;;</span><br><span class="line">int f[3000][3000]=&#123;&#125;;</span><br><span class="line">int Up[3000][3000]=&#123;&#125;;</span><br><span class="line">int Right[3000][3000]=&#123;&#125;;</span><br><span class="line">int Left[3000][3000]=&#123;&#125;;</span><br><span class="line">inline int <span class="built_in">read</span>()</span><br><span class="line">&#123;</span><br><span class="line">int n=1,num=0;</span><br><span class="line">char ch=getchar();</span><br><span class="line"><span class="keyword">while</span>(!isdigit(ch))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(ch==<span class="string">'-'</span>)n=-1;</span><br><span class="line">ch=getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(isdigit(ch))</span><br><span class="line">&#123;</span><br><span class="line">num=(num&lt;&lt;1)+(num&lt;&lt;3)+ch-<span class="string">'0'</span>;</span><br><span class="line">ch=getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">return</span> n*num;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int n,m,ans=0;</span><br><span class="line">    n=<span class="built_in">read</span>();m=<span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span>(register int i=1;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(register int j=1;j&lt;=m;j++)</span><br><span class="line">&#123;</span><br><span class="line">a[i][j]=<span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">if</span>(a[i][j]==0)</span><br><span class="line">&#123;</span><br><span class="line">Up[i+1][j]=Up[i][j]+1;</span><br><span class="line">Left[i][j+1]=Left[i][j]+1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">for</span>(register int i=1;i&lt;=n;++i)</span><br><span class="line"><span class="keyword">for</span>(register int j=m;j&gt;=1;--j)</span><br><span class="line"><span class="keyword">if</span>(a[i][j]==0)</span><br><span class="line">Right[i][j-1]=Right[i][j]+1;</span><br><span class="line"><span class="keyword">for</span>(register int i=1;i&lt;=n;++i)</span><br><span class="line"><span class="keyword">for</span>(register int j=1;j&lt;=m;++j)</span><br><span class="line"><span class="keyword">if</span>(a[i][j]==1)</span><br><span class="line">&#123;</span><br><span class="line">f[i][j]=min(f[i-1][j-1],Left[i][j]);</span><br><span class="line">f[i][j]=min(f[i][j],Up[i][j])+1;</span><br><span class="line">ans=max(ans,f[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">memset(f,0,sizeof(f));</span><br><span class="line">    <span class="keyword">for</span>(register int i=1;i&lt;=n;++i)</span><br><span class="line"><span class="keyword">for</span>(register int j=m;j&gt;=1;--j)</span><br><span class="line"><span class="keyword">if</span>(a[i][j]==1)</span><br><span class="line">&#123;</span><br><span class="line">f[i][j]=min(f[i-1][j+1],Right[i][j]);</span><br><span class="line">f[i][j]=min(f[i][j],Up[i][j])+1;</span><br><span class="line">ans=max(ans,f[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>题目贴出来。。<br><img src="/img/201808233.jpg" alt="一道大水题"></p><p>这个是只用流输入输出的优化<br><img src="/img/201808231.jpg" alt="欲哭无泪"><br><del>这道题给我这个教训以前，我曾以为这个优化很牛逼</del></p><p>这个是前面贴出代码的效果<br><img src="/img/201808232.jpg" alt="快了五倍"></p><h3 id="其他优化日后更新-相信我"><a href="#其他优化日后更新-相信我" class="headerlink" title="其他优化日后更新 相信我"></a>其他优化日后更新 <del>相信我</del></h3>]]></content>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 优化 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>求单源最短路——spfa</title>
      <link href="/2018/08/12/spfa/"/>
      <url>/2018/08/12/spfa/</url>
      <content type="html"><![CDATA[<p>设立一个先进先出的队列q用来保存待优化的结点，优化时每次取出队首结点u，并且用u点当前的最短路径估计值对离开u点所指向的结点v进行松弛操作，如果v点的最短路径估计值有所调整，且v点不在当前的队列中，就将v点放入队尾。这样不断从队列中取出结点来进行松弛操作，直至队列空为止。<br><a id="more"></a><br>松弛操作的原理是著名的定理：“三角形两边之和大于第三边”，在信息学中我们叫它三角不等式。所谓对结点i,j进行松弛，就是判定是否dis[j]&gt;dis[i]+w[i,j]，如果该式成立则将dis[j]减小到dis[i]+w[i,j]，否则不动。</p><h2 id="和广搜bfs的区别："><a href="#和广搜bfs的区别：" class="headerlink" title="和广搜bfs的区别："></a>和广搜bfs的区别：</h2><p>SPFA 在形式上和广度(宽度)优先搜索非常类似，不同的是bfs中一个点出了队列就不可能重新进入队列，但是SPFA中一个点可能在出队列之后再次被放入队列，也就是一个点改进过其它的点之后，过了一段时间可能本身被改进(重新入队)，于是再次用来改进其它的点，这样反复迭代下去。</p><h2 id="算法描述："><a href="#算法描述：" class="headerlink" title="算法描述："></a>算法描述：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">void  spfa(s);  //求单源点s到其它各顶点的最短距离</span><br><span class="line">    <span class="keyword">for</span> i=1 to n <span class="keyword">do</span> &#123; dis[i]=∞; vis[i]=<span class="literal">false</span>; &#125;   //初始化每点到s的距离，不在队列</span><br><span class="line">    dis[s]=0;  //将dis[源点]设为0</span><br><span class="line">    vis[s]=<span class="literal">true</span>; //源点s入队列</span><br><span class="line">    head=0; tail=1; q[tail]=s; //源点s入队, 头尾指针赋初值</span><br><span class="line">    <span class="keyword">while</span> head&lt;tail <span class="keyword">do</span> &#123;</span><br><span class="line">       head+1;  //队首出队</span><br><span class="line">       v=q[head];  //队首结点v</span><br><span class="line">       vis[v]=<span class="literal">false</span>;  //释放对v的标记，可以重新入队</span><br><span class="line">       <span class="keyword">for</span> 每条边(v,i)  //对于与队首v相连的每一条边</span><br><span class="line">    <span class="keyword">if</span> (dis[i]&gt;dis[v]+a[v][i])  //如果不满足三角形性质</span><br><span class="line"> dis[i] = dis[v] + a[v][i]   //松弛dis[i]</span><br><span class="line"><span class="keyword">if</span> (vis[i]=<span class="literal">false</span>) &#123;tail+1; q[tail]=i; vis[i]=<span class="literal">true</span>;&#125; //不在队列，则加入队列</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo的一些操作</title>
      <link href="/2018/08/01/hexo%E7%9A%84%E4%B8%80%E4%BA%9B%E6%93%8D%E4%BD%9C/"/>
      <url>/2018/08/01/hexo%E7%9A%84%E4%B8%80%E4%BA%9B%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h2 id="迁移"><a href="#迁移" class="headerlink" title="迁移"></a>迁移</h2><p>我找到了两个网站</p><p><a href="https://blog.csdn.net/Zhangxiaorui_9/article/details/79723288" target="_blank" rel="noopener">click here</a></p><p><a href="https://blog.csdn.net/dxxzst/article/details/76135750" target="_blank" rel="noopener">click here</a><br><a id="more"></a><br>不过都看不懂。。<br>最后这个详细点<br><a href="https://blog.csdn.net/wxl1555/article/details/79293159" target="_blank" rel="noopener">click here</a></p><h2 id="插入媒体"><a href="#插入媒体" class="headerlink" title="插入媒体"></a>插入媒体</h2><p>可以插入图片，音乐，视频<br><a href="https://blog.csdn.net/qq_26891045/article/details/51693571" target="_blank" rel="noopener">click here</a></p><h2 id="这个厉害"><a href="#这个厉害" class="headerlink" title="这个厉害"></a>这个厉害</h2><p><a href="https://www.cnblogs.com/jarson-7426/p/5515870.html" target="_blank" rel="noopener">click here</a></p><h2 id="相册功能"><a href="#相册功能" class="headerlink" title="相册功能"></a>相册功能</h2><p>看起来好难弄<br><a href="https://zlwis.vip/2016/01/17/hexo%E4%B8%BB%E9%A2%98%E4%B8%AD%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%86%8C%E5%8A%9F%E8%83%BD/#more" target="_blank" rel="noopener">click here</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>关于hexo的主题</title>
      <link href="/2018/08/01/%E5%85%B3%E4%BA%8Ehexo%E7%9A%84%E4%B8%BB%E9%A2%98/"/>
      <url>/2018/08/01/%E5%85%B3%E4%BA%8Ehexo%E7%9A%84%E4%B8%BB%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>这里有个网站，推荐了几个不错的主题，还有预览<br><a href="https://www.jianshu.com/p/bcdbe7347c8d" target="_blank" rel="noopener">click here</a><br><a id="more"></a><br>有两个我很喜欢<br><a href="http://litten.me/" target="_blank" rel="noopener">yilia</a><br><a href="http://louisbarranqueiro.github.io/hexo-theme-tranquilpeak/" target="_blank" rel="noopener">Tranquilpeak</a><br>初步打算弄成yilia<br>然后配置yilia主题的步骤在这里<br><a href="http://www.lookk.cn/2017/12/08/hexo-%E9%85%8D%E7%BD%AEyilia%E4%B8%BB%E9%A2%98/" target="_blank" rel="noopener">click here</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Violin</title>
      <link href="/2018/08/01/Violin/"/>
      <url>/2018/08/01/Violin/</url>
      <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=3882876&auto=1&height=66"></iframe>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Hello the cruel world!</title>
      <link href="/2018/07/31/Hello%20the%20cruel%20world!/"/>
      <url>/2018/07/31/Hello%20the%20cruel%20world!/</url>
      <content type="html"><![CDATA[<p><img src="/img/life.jpg" alt="Life is colorfull,Do you agree?"></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=3882876&auto=1&height=66"></iframe>]]></content>
      
      
    </entry>
    
    <entry>
      <title>fcy click here</title>
      <link href="/2018/07/31/fcy%20click%20here/"/>
      <url>/2018/07/31/fcy%20click%20here/</url>
      <content type="html"><![CDATA[<p>博客出了一点问题<br>整修中，不久一定会发布这篇。。。<br>不是文章内容整修。。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/07/31/hello-world/"/>
      <url>/2018/07/31/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br><a id="more"></a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><p><img src="/img/life.jpg" alt="Life is colorfull,Do you agree?"></p><p>#<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=3882876&auto=1&height=66"></iframe></p>]]></content>
      
      
    </entry>
    
  
  
</search>
